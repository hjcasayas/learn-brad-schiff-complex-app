services:
  web-express-ts:
    build:
      dockerfile: ./web-express-ts-css.dockerfile
    restart: always
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - MONGO_USER=root
      - MONGO_PASSWORD=example
      - MONGO_DB=complex-app
      - MONGO_DOMAIN=mongo
      - MONGO_PORT=27017
      - MONGO_AUTH_DB=admin
      - DATABASE_URL=mongodb://mongo:27017/complex-app?&retryWrites=true&replicaSet=rs0
      - SESSION_SECRET=JavascriptIsSoCool
    depends_on:
      - mongo
    develop:
      watch:
        - action: sync
          path: ./web/express-ts-css/dist
          target: /complex-app/web/express-ts-css/dist
        - action: sync
          path: ./lib/interfaces/dist
          target: /complex-app/lib/interfaces/dist
        - action: sync
          path: ./lib/services/dist
          target: /complex-app/lib/services/dist
        - action: sync
          path: ./lib/repositories/dist
          target: /complex-app/lib/repositories/dist
        - action: sync
          path: ./lib/implementations/dist
          target: /complex-app/lib/implementations/dist
        - action: rebuild
          path: ./web/express-ts-css/package.json
        - action: rebuild
          path: ./lib/interfaces/package.json
        - action: rebuild
          path: ./lib/services/package.json
        - action: rebuild
          path: ./lib/repositories/package.json
        - action: rebuild
          path: ./lib/implementations/package.json
        - action: rebuild
          path: ./lib/implementations/prisma/schema.prisma
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./docker-compose.yaml
        - action: rebuild
          path: ./web-express-ts-css.dockerfile

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./db:/data/db
    ports:
      - 27017:27017
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/?replicaSet=rs0
      ME_CONFIG_BASICAUTH: false
